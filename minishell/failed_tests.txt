SOLVED cd
-----
SOLVED cd /etc -> on minishell goes to private/etc
ChatGPT says that:
The behavior you're seeing might be related to the default behavior of the macOS filesystem.

In macOS, the root directory is actually a symlink to "/private/var/root" instead of the typical "/". This means that when you run the "cd /" command, you're actually being redirected to the "/private" directory.

Similarly, when you run "cd /etc", you're actually being redirected to "/private/etc" instead of "/etc".

To confirm if this is the issue, you can try running the "ls /" command and see if it lists "/private" as one of the directories. If it does, then this is likely the cause of the behavior you're seeing.
-------
SOLVED cd "$PWD/prompt" -> chdir: No such file or directory: ~
-------
cd "doesntexist" 2>/dev/null -> chdir: No such file or directory: doesntexist instead of nothing
In a correctly implemented version of the "cd" command, running "cd "doesntexist" 2>/dev/null" would change the current working directory to a non-existent directory named "doesntexist" and redirect any error messages generated by the command to the "null" device, effectively discarding them.

The "2>" part of the command is a redirection operator that redirects the standard error stream to the file descriptor following it. In this case, "/dev/null" is a special device file that discards any data written to it. So "2>/dev/null" redirects any error messages generated by the "cd" command to /dev/null, effectively suppressing them.

Note that the behavior of the "cd" command might vary depending on the implementation and the operating system. In some implementations, running "cd "doesntexist"" might result in an error message being displayed, even with the redirection to /dev/null.
	SOLUTION
	The error should be redirected to the file instead of stderr
----
SOLVED cd $PWD/file_tests
------
SOLVED cd $OLDPWD/builtins

<<<<<<< HEAD
TODO Escape spaces in dir name (or it's fine not to)
=======
TODO Escape spaces in dir name
>>>>>>> tim

------
SOLVED echo $
------
echo -n -n -n bonjour -> bonjour$
------
echo -n"-n" bonjour -> -n-n bonjour
------
echo "-nnnn" -n bonjour	-> bonjour$
------
echo "-n -n -n"-n bonjour -> -n -n -n-n bonjour
------
echo "-n '-n'" bonjour -> -n '-n' bonjour
------
<<<<<<< HEAD
SOLVED echo "'$USER'" -> 'tim'
------
SOLVED echo " '$USER' " ->  'tim'
------
SOLVED echo text"$USER" -> texttim
------
SOLVED echo text"'$USER'" ' $USER ' -> text'tim'  $USER
------
SOLVED echo               text "$USER"            "$USER"text -> text tim timtext
------
SOLVED echo ''''''''''$USER'''''''''' -> tim
------
SOLVED echo """"""""$USER"""""""" -> tim
------
SOLVED echo $USER'$USER'text oui oui     oui  oui $USER oui      $USER '' -> tim$USERtext oui oui oui oui tim oui tim
------
SOLVED echo ' \' ' \' ->  \  \
=======
echo "'$USER'" -> 'tim'
------
echo " '$USER' " ->  'tim'
------
echo text"$USER" -> texttim
------
echo text"'$USER'" ' $USER ' -> text'tim'  $USER
------
echo               text "$USER"            "$USER"text -> text tim timtext
------
echo ''''''''''$USER'''''''''' -> tim
------
echo """"""""$USER"""""""" -> tim
------
echo $USER'$USER'text oui oui     oui  oui $USER oui      $USER '' -> tim$USERtext oui oui oui oui tim oui tim
------
echo ' \' ' \' ->  \  \
>>>>>>> tim
------
echo '\" ' " \"\"" -> \"   ""
------
echo \\\" \\\" \\\" \\\"\\\"\\\" \\\'\\\'\\\' -> \" \" \" \"\"\" \'\'\'
------
<<<<<<< HEAD
echo '$'
------
SOLVED ex
------
SOLVED echo "$USER""$USER""$USER" -> timtimtim
------
SOLVED echo text"$USER"test -> texttimtest
------
SOLVED echo '$USER' "$USER" "text \' text" -> $USER tfregni text \' text
------
export | grep "SHLVL" -> declare -x SHLVL="3"
=======
echo "$USER""$USER""$USER" -> timtimtim
------
echo text"$USER"test -> texttimtest
------
>>>>>>> tim
