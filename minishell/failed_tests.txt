


SOLVED cd
-----
SOLVED cd /etc -> on minishell goes to private/etc
ChatGPT says that:
The behavior you're seeing might be related to the default behavior of the macOS filesystem.

In macOS, the root directory is actually a symlink to "/private/var/root" instead of the typical "/". This means that when you run the "cd /" command, you're actually being redirected to the "/private" directory.

Similarly, when you run "cd /etc", you're actually being redirected to "/private/etc" instead of "/etc".

To confirm if this is the issue, you can try running the "ls /" command and see if it lists "/private" as one of the directories. If it does, then this is likely the cause of the behavior you're seeing.
-------
SOLVED cd "$PWD/prompt" -> chdir: No such file or directory: ~
-------
cd "doesntexist" 2>/dev/null -> chdir: No such file or directory: doesntexist instead of nothing
In a correctly implemented version of the "cd" command, running "cd "doesntexist" 2>/dev/null" would change the current working directory to a non-existent directory named "doesntexist" and redirect any error messages generated by the command to the "null" device, effectively discarding them.

The "2>" part of the command is a redirection operator that redirects the standard error stream to the file descriptor following it. In this case, "/dev/null" is a special device file that discards any data written to it. So "2>/dev/null" redirects any error messages generated by the "cd" command to /dev/null, effectively suppressing them.

Note that the behavior of the "cd" command might vary depending on the implementation and the operating system. In some implementations, running "cd "doesntexist"" might result in an error message being displayed, even with the redirection to /dev/null.
	SOLUTION
	The error should be redirected to the file instead of stderr
----
SOLVED cd $PWD/file_tests
------
SOLVED cd $OLDPWD/builtins
------
cd "~/Desktop" -> bash: cd: ~/Desktop: No such file or directory (check expansion in error message)

TODO Escape spaces in dir name (or it's fine not to)

------
SOLVED echo $ -> $
------
SOLVED echo -n -n -n bonjour -> bonjour$
------
SOLVED echo -n"-n" bonjour -> -n-n bonjour
------
SOLVED echo "-nnnn" -n bonjour	-> bonjour$
------
SOLVED echo "-n -n -n"-n bonjour -> -n -n -n-n bonjour
------
SOLVED echo "-n '-n'" bonjour -> -n '-n' bonjour
------
SOLVED echo "'$USER'" -> 'tim'
------
SOLVED echo "   '$USER' " ->    'tim'
------
SOLVED echo text"$USER" -> texttim
------
SOLVED echo text"'$USER'" ' $USER ' -> text'tim'  $USER
------
SOLVED echo               text "$USER"            "$USER"text -> text tim timtext
------
SOLVED echo ''''''''''$USER'''''''''' -> tim
------
SOLVED echo """"""""$USER"""""""" -> tim
------
SOLVED echo $USER'$USER'text oui oui     oui  oui $USER oui      $USER '' -> tim$USERtext oui oui oui oui tim oui tim
------
SOLVED echo ' \' ' \' ->  \  \
------
echo '\" ' " \"\"" -> \"   ""  FIX ESCAPED
------
echo \\\" \\\" \\\" \\\"\\\"\\\" \\\'\\\'\\\' -> \" \" \" \"\"\" \'\'\'  INVALID READ
------
SOLVED echo '$'
------
SOLVED echo "'$   bla'" -> '$   bla'
------
SOLVED echo "$   bla" -> $   bla
------
SOLVED ex
------
SOLVED echo "$USER""$USER""$USER" -> timtimtim
------
SOLVED echo text"$USER"test -> texttimtest
------
SOLVED echo '$USER' "$USER" "text \' text" -> $USER tfregni text \' text
------
SOLVED (undefined) export | grep "SHLVL" -> declare -x SHLVL="3"
------
export test=" foo   bar " -> foo bar
------
export test="  ' foo    bar'  " -> ' foo bar'
------
export test="   '   $USER  bla ' " -> ' tfregni bla '
------
echo hello $test -> hello ' tfregni bla '
In bash:
	cmd							stored									output			clean
	export test="'$USER'" -> 				test='tfregni'				'tfregni'
	export test='$USER' -> 					test=$USER					$USER
	export test=$USER -> 					test=tfregni				tfregni
	export test="  ' foo  bar'" -> 			test=  ' foo  bar'			' foo bar'		yes
	export test="  '  foo  $USER   ' " -> 	test=  '  foo  tfregni   '	' foo tfregni '	yes
	export test="    foo   $USER    " -> 	test=    foo   tfregni		foo tfregni		yes
	export test=" '  $USER   foo '  "		test= '  tfregni   foo '	' tfregni foo '	yes
	export test="'   foo  $USER ' "			test='   foo  tfregni '		' foo tfregni '	yes
	export test="'foo  $USER ' "			test='foo  tfregni '		'foo tfregni '	yes
	export test="foo    $USER  "			test=foo    tfregni			foo tfregni

	test="'$USER'"
	echo "'$USER' $test"												'tim' 'tim'

bash-3.2$ test="    ' foo    bar  '"
bash-3.2$ echo $test
' foo bar '
bash-3.2$ export test="    ' foo    bar  '"
bash-3.2$ echo $test
' foo bar '
bash-3.2$ env | grep test
test=    ' foo    bar  '
bash-3.2$ export test="    ' foo    $USER  '"
bash-3.2$ env | grep test
test=    ' foo    tim  '
bash-3.2$ echo $test
' foo tim '
bash-3.2$ echo "   ' $test  '"
   '     ' foo    tim  '  '

par_node trim_cmd removed free

fixed leak in add param: exec_utils add_param: free(trimmed)
fixed invalid read export.c is_param by deleting i++ after ft_skip_char

test="   foo   bar"
echo $test
==17738== 18 bytes in 2 blocks are definitely lost in loss record 16 of 113
==17738==    at 0x1000B72C5: malloc (vg_replace_malloc.c:388)
==17738==    by 0x100005E9D: ft_strdup (in ./minishell)
==17738==    by 0x10000378A: par_fill_cmd (par_redir.c:54)
==17738==    by 0x1000034ED: par_list_new_node (par_list.c:48)
==17738==    by 0x100002CED: par_list_from_lex (parser.c:51)
==17738==    by 0x100002DD3: parser (parser.c:84)
==17738==    by 0x1000013E5: prompt_routine (prompt.c:59)
==17738==    by 0x100001485: get_prompt (prompt.c:80)
==17738==    by 0x1000011ED: main (main.c:96)
gets fixed removing trim_cmd from echo. why?
fixed by putting back free in par_node trim_cmd

SOLVED echo $ARG (where ARG is not a valid var) segfaults. Fixed in expand_var: protect if !param

fixed leak in expand_var by adding a free in expander

whoami | cat -e | cat -e > tmp/file displayes 4 errors: should cut it shorter

export test='   $USER   foo '; echo $test; unset test
leak in unset
==46414== 4 bytes in 1 blocks are definitely lost in loss record 1 of 114
==46414==    at 0x1000B72C5: malloc (vg_replace_malloc.c:388)
==46414==    by 0x100005DAD: ft_strdup (in ./minishell)
==46414==    by 0x1000051EC: env_append (builtins_util.c:57)
==46414==    by 0x1000056AE: add_status (error_handling.c:25)
==46414==    by 0x100003F02: execute (executor.c:84)
==46414==    by 0x1000012EE: prompt_routine (prompt.c:60)
==46414==    by 0x100001375: get_prompt (prompt.c:80)
==46414==    by 0x1000010DD: main (main.c:96)

==46414== 91 bytes in 1 blocks are definitely lost in loss record 47 of 114
==46414==    at 0x1000B72C5: malloc (vg_replace_malloc.c:388)
==46414==    by 0x100005DAD: ft_strdup (in ./minishell)
==46414==    by 0x100000EF6: matrix_dup (main.c:52)
==46414==    by 0x100000F71: init (main.c:65)
==46414==    by 0x100001045: main (main.c:82)

exit 0 0															--> working
exit 42 42															--> working
exit -42 -24														--> working
exit 42																--> working
exit 42 53 68														--> working
exit 259															--> working
exit -12030															--> working
exit --1239312														--> working
exit ++++1203020103													--> working
exit +0																--> working
exit ++++++0														--> NOT WORING!
exit -----0															--> NOT WORING!
exit azerty															--> working
exit kewkwqke														--> working
exit a																--> working
exit z																--> working
exit "1"															--> working
exit "2"															--> working
exit "+102"															--> working
exit "1230"															--> working
exit "+++1230"
exit "1"23															--> working
exit "2"32"32"
exit "'42'"															--> working
exit '42'"42"42
exit +'42'"42"42
exit -'42'"42"42
exit 9223372036854775807 											--> working
TO FIX, MAYBE exit 9223372036854775808
exit -4																--> working
exit 1																--> working
exit -1																--> working
exit 42																--> working
exit 0																--> working
exit --000															--> working
exit +++++++000														--> working
exit ++++3193912939													--> working
exit ---31232103012													--> working
exit "something"													--> working
exit echo															--> working
exit cd ..															--> working
exit 0 0															--> working
exit 42 42 42 42 42													--> working
exit echo something													--> working
exit exit															--> working

EXPORT:

env | grep "_="														--> working
export | grep "SHLVL"												--> working
export | grep "OLDPWD"												--> working
export | grep "PWD"													--> working
export $?															--> working
export TEST															--> working
export TEST=														--> working
export TEST=123														--> working
export ___TEST=123													--> working
export --TEST=123													--> working
export ""=""														--> working
export ''=''														--> working
export "="="="														--> working
export '='='='														--> working
export TE\\\ST=100													--> working
export TE-ST=100													--> working
export -TEST=100													--> working
export TEST-=100													--> working
export _TEST=100													--> working
export TEST															--> working
export ==========													--> working
export 1TEST=														--> working
export TEST															--> working
export ""=""														--> working
export TES=T=""														--> working
export TE+S=T=""													--> working
export TES\\\\T=123
export TES.T=123
export TES\\\$T=123
export TES\\\\T
export TES.T=123
export TES+T=123
export TES=T=123
export TES}T=123
export TES{T=123
export TES-T=123
export -TEST=123
export _TEST=123
export TES_T=123
export TEST_=123
export TE*ST=123
export TES#T=123
export TES@T=123
export TES!T=123
export TES$?T=123
export =============123
export +++++++=123
export ________=123
export export
export echo
export pwd
export cd
export export
export unset
export sudo
export TES^T=123
export TES!T=123
export TES\~T=123
export TEST+=100

PIPES:

env | grep "_="																--> working
env | grep "SHLVL"															--> working
echo oui | cat -e															--> working
echo oui | echo non | echo something | grep oui								--> working
echo oui | echo non | echo something | grep non								--> working
echo oui | echo non | echo something | grep something						--> working
cd .. | echo "something"													--> working
cd .. | echo "something"													--> working
cd / | echo "something"														--> working
cd .. | pwd																	--> working
ifconfig | grep ":"															--> working
ifconfig | grep nothing														--> working
whoami | grep $USER															--> working
whoami | grep $USER > tmp/file												--> working
whoami | cat -e | cat -e > tmp/file											--> working
cat Makefile | grep "FLAGS"													--> working
cat Makefile | cat -e | cat -e												--> working
cat Makefile | grep "FLAGS" | grep "FLAGS" | cat -e							--> working
export TEST=123 | cat -e | cat -e											--> working
unset TEST | cat -e															--> working
echo test | cat -e | cat -e | cat -e										--> working
whereis ls | cat -e | cat -e > test											--> working
echo test | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e
ls -la | grep "."															--> working
whereis grep > tmp/file														--> working
whereis grep > tmp/file														--> working
ls -la > tmp/file															--> working
ls -la > tmp/file															--> working

UNSET:

unset
export TEST=100
unset doesntexist
unset PWD
unset PWD
unset OLDPWD
unset PATH
unset PATH
unset PATH
unset TES\\\\T
unset TES;T
unset TES.T
unset TES+T
unset TES=T
unset TES}T
unset TES{T
unset TES-T
unset -TEST
unset _TEST
unset TES_T
unset TEST_
unset TE*ST
unset TES#T
unset TES@T
unset TES!T
unset TES$?T
unset ============
unset +++++++
unset ________
unset export
unset echo
unset pwd
unset cd
unset unset
unset sudo
unset TES^T
unset TES!T
unset TES\~T
8:20
<in cmd "str1 str2 str3" | cmd2 -arg | cmd3 >out >out2
cmd "str1 str2 str3" >out | cmd2 -arg | cmd3 >out2 >out3
cmd "str1 str2 str3" >out | cmd2 -arg str | cmd3 str >out2 >out3
cmd <in -arg | cmd2 "str |" >out>>out2
cmd1 <in1 -arg1 > out1 | cmd2 <in2 -arg2 > out2

cd
 cd .. hi (should not change directory)

 unset HOME
 cd

 ls |

# Check if there isn't a zombie process called `cat`
echo "hi" | cat | cat | cat | cat | cat | cat | cat
ps -a

TO FIX THE LEAK:
I wasn't freeing in add_flag_char. I noticed the leak was there only for double expansions (not echo $USER)

added pid to g_shell to avoid init in executor and save lines

echo $?HELLO

export hello world 

cd $PWD hi	too many args (err 1)

env | sort | grep -v SHLVL | grep -v	exit code empty

cat ./test_files/infile_big | grep oi

export GHOST=123 | env | grep GHOST 	if outfile =! 1 don't write